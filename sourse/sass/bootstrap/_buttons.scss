// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.btn {
  display: inline-block;
  font-weight: $btn-font-weight;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $h6-font-size, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  // Share hover and focus styles
  @include hover-focus {
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  // Opinionated: add "hand" cursor to non-disabled .btn elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value, $value);
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}

.btn-primary{
	// margin: 100px 10px;
	text-shadow: 0 1px 0 #128186, 0 0 29px rgba(255, 255, 255, 0.35);
	box-shadow: 
	inset 0 1px 3px rgba(255, 255, 255, 0.5), 
	// inset 0 10px 2px rgba(255, 255, 255, 0.5), 
	inset 0 -20px 2px rgba($color: #169ca1, $alpha: .8),
	0 1px 21px rgba(0, 0, 0, 0.13),
	0 5px 0 #169ca1,
	0 10px 25px rgba($color: #169ca1, $alpha: .6)
	;
	border-radius: 33px;
	border: 1px solid rgba(0, 0, 0, 0);
	border: 1px solid rgba(255, 255, 255, 0.2);
	background-image: linear-gradient(to top, #1b9a9f 0%, $primary 100%);
	position: relative;
	overflow: hidden;
	@include mt;
	span{
		position: relative;
		z-index: 2;
	}
	&::before{
		content: '';
		position: absolute;
		top: 35%;
		left: 0;
		width: 100%;
		height: .7em;
		box-shadow:  
		inset 0 -.1em .3em rgba($color: #000, $alpha: .1);
		border-radius: #{20%/50%};
		@include mt;
	}
	&:hover{
		box-shadow: 
		inset 0 0 3px rgba(255, 255, 255, 0.5), 
		inset 0 0 0 rgba(227, 145, 101, 0.29), 
		0 0 0 #169ca1,
		0 -2px 15px rgba($color: #169ca1, $alpha: .6)
		; 
		border: 1px solid rgba(255, 255, 255, 0.1);
		background-image: linear-gradient(to bottom, #1b9a9f 0%, $primary 100%);
		@include transform(translateY(1px));
		&::before{
	 
			box-shadow:  
			inset 0 0 0 rgba($color: #000, $alpha: .1);
			border-radius: #{20%/50%};
		}
	}
}
.btn-secondary{
	// color: #169179;
	color: #169179;
	box-shadow: 
	inset 0 1px 3px rgba(255, 255, 255, 0.5), inset 0 0 0 rgba(227, 145, 101, 0.29),
	0 1px 21px rgba(0, 0, 0, 0.13),
	0 5px 0 #a1a1a1 
	; 
	// border: 1px solid rgba($color: #fff, $alpha: .5);
	border: 1px solid #dfdfdf;
	// border: 1px solid rgba(0, 0, 0, 0);
	background-image: linear-gradient(to top, #b8b8b8 0%, #ffffff 100%);
	@include mt;
	position: relative;
	overflow: hidden;
	@include mt;
	&::before{
		content: '';
		position: absolute;
		top: 35%;
		left: 0;
		width: 100%;
		height: .7em;
		box-shadow:  
		inset 0 -.1em .2em rgba($color: #000, $alpha: .1);
		border-radius: #{20%/50%};
		@include mt;
	}
	&:hover{
		color: #169179;
		box-shadow: 
		inset 0 0px 3px rgba(255, 255, 255, 0.5), inset 0 0 0 rgba(227, 145, 101, 0.29),
		0 0 21px rgba(0, 0, 0, 0.13),
		0 0 0 #a1a1a1 
		; 
		border: 1px solid rgba($color: #b8b8b8, $alpha: .8);
		background-image: linear-gradient(to bottom, #b8b8b8 0%, #ffffff 100%);
		@include transform(translateY(1px));
		&::before{
		 
			box-shadow:  
			inset 0 0 0 rgba($color: #000, $alpha: .1);
			border-radius: #{20%/50%};
		}
	}
	
	&:active,
	&:focus{
		color: #169179;
		box-shadow: 
		inset 0 0px 3px rgba(255, 255, 255, 0.5), inset 0 0 0 rgba(227, 145, 101, 0.29),
		0 0 21px rgba(0, 0, 0, 0.13),
		0 0 0 #a1a1a1 
		; 
		border: 1px solid rgba($color: #b8b8b8, $alpha: .8);
		background-image: linear-gradient(to bottom, #b8b8b8 0%, #ffffff 100%);
		@include transform(translateY(1px));
	}

}
//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $link-color;
  background-color: transparent;

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
    border-color: transparent;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    border-color: transparent;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
	@include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
	@include media-breakpoint-down(xs) { 
		font-size: $small;
		padding-top: $btn-padding-y-lg *.6;
		padding-bottom: $btn-padding-y-lg *.6;
	} 
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}


//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}
